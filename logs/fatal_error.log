Traceback (most recent call last):
  File "C:\Users\Ali\Documents\OpenAI\cognitive_friction_engine\main.py", line 148, in <module>
    asyncio.run(multi_run(args, config))
  File "C:\Users\Ali\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 190, in run
    return runner.run(main)
           ^^^^^^^^^^^^^^^^
  File "C:\Users\Ali\AppData\Local\Programs\Python\Python311\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Ali\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 650, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "C:\Users\Ali\Documents\OpenAI\cognitive_friction_engine\main.py", line 105, in multi_run
    agents, proposals = await get_agent_panel_from_board(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Ali\Documents\OpenAI\cognitive_friction_engine\agent_picker.py", line 80, in get_agent_panel_from_board
    agents = await propose_agents(bm, premise, process_instruction, temperature=temperature, max_agents=max_agents)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Ali\Documents\OpenAI\cognitive_friction_engine\agent_picker.py", line 65, in propose_agents
    resp = await call_gpt(system_prompt, user_prompt, temperature=temperature)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Ali\Documents\OpenAI\cognitive_friction_engine\engine\gpt.py", line 30, in call_gpt
    response = await client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Ali\Documents\OpenAI\cognitive_friction_engine\.venv\Lib\site-packages\openai\resources\chat\completions\completions.py", line 2028, in create
    return await self._post(
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\Ali\Documents\OpenAI\cognitive_friction_engine\.venv\Lib\site-packages\openai\_base_client.py", line 1742, in post
    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Ali\Documents\OpenAI\cognitive_friction_engine\.venv\Lib\site-packages\openai\_base_client.py", line 1549, in request
    raise self._make_status_error_from_response(err.response) from None
openai.BadRequestError: Error code: 400 - {'error': {'message': "'messages' must contain the word 'json' in some form, to use 'response_format' of type 'json_object'.", 'type': 'invalid_request_error', 'param': 'messages', 'code': None}}
