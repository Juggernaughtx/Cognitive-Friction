# run_config.yaml

premise: "A system for advanced retail and institutional investors that constructs and manages swing-trade portfolios by algorithmically digesting premium financial subscription data. The system must ingest and integrate a wide range of financial data: fundamentals, technical indicators, news sentiment, and live/paid data feeds from third-party vendors. Core design mandates robust automated data validation to ensure accuracy, minimize data-related errors, and prevent model drift from poor or stale inputs. Portfolio screening, construction, and dynamic rebalancing are fully automated, leveraging all available quantitative and textual signals. Target: consistent, positive expected value (EV) and meaningful asymmetric return profiles, net of real-world fees, slippage, and transaction costs. The platform must be able to operate as a scalable premium subscription service, supporting both sophisticated retail and institutional clients, and must streamline workflow for the end user. The fundamental goal is to systematically construct profitable portfolios, minimize avoidable modeling and process errors, and improve performance via workflow efficiency and competitive edge. All risks, technical failure points, improvement opportunities, must-have safeguards, and realistic implementation challenges—across development, quant, product, and engineering domains—are in scope. The end vision is an ironclad system with a credible case for robust, annual profitability. Include, as feasible, recommendations for specific data services with a premium cost below €100/month."
process_instruction: "Panel must operate with maximum technical and adversarial rigor: No data source, modeling claim, technical decision, mitigation, or operational safeguard should go unexamined. Each agent must interrogate not only the current proposal, but all previous solutions for newly introduced vulnerabilities, edge-cases, side effects, workflow inefficiencies, or infeasibility under scale. Systematically enumerate all points of failure, improvement opportunities, and essential safeguards as imagined by development, quant, technical product, and system engineering perspectives. Attack every data intake, validation, aggregation, signal extraction, and automation flow for both typical and extreme scenarios; surface hidden errors, modeling blind spots, and systemic edge decay. Assumptions about positive EV, asymmetric opportunity, and rebalancing efficiency must be stress-tested—especially versus live execution risk, market friction, and data quality errors. Consensus or closure is not permitted until all plausible technical, operational, and modeling risks are addressed or acknowledged as open; superficial agreement is unacceptable. Synthesis must explicitly enumerate any remaining unaddressed risks, known unknowns, critical workflow or modeling improvements, and gaps in safeguards—even if the system cannot (yet) be made fully 'ironclad.' Repetition, hand-waving, or shallow critique is not tolerated; creativity and adversarial thinking are rewarded. If panel agreement occurs too rapidly or critique lacks depth, the meta-agent must escalate with disruptive scenarios, randomization of agent roles, or the introduction of new antagonistic perspectives."
max_iter: 1
multi_run: 1
agents: "agents.yaml"
meta_agent: "meta_agent.yaml"
seed: 12345
verbose: true